{"version":3,"file":"static/js/256.eb59d6ce.chunk.js","mappings":"8SAEMA,EAAW,gCACXC,EAAU,mCAEHC,EAAY,mCAAG,WAAOC,GAAP,4FAAcC,EAAd,+BAAqB,EAArB,SACHC,EAAAA,EAAAA,IAAA,UAClBL,EADkB,gCACcC,EADd,kBAC+BE,EAD/B,iBAC6CC,IAF1C,cACpBE,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZC,EAAmB,mCAAG,oGACVH,EAAAA,EAAAA,IAAA,UAClBL,EADkB,sCACoBC,IAFV,cAC3BK,EAD2B,yBAI1BA,EAASC,MAJiB,2CAAH,qDAOnBE,EAAS,mCAAG,WAAMC,GAAN,uFACAL,EAAAA,EAAAA,IAAA,UAClBL,EADkB,iBACDU,EADC,4BAC0BT,IAF1B,cACjBK,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOTI,EAAY,mCAAG,WAAMD,GAAN,uFACHL,EAAAA,EAAAA,IAAA,UAClBL,EADkB,iBACDU,EADC,4BAC0BT,IAFvB,cACpBK,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZK,EAAe,mCAAG,WAAMC,GAAN,uFACNR,EAAAA,EAAAA,IAAA,UAAaL,EAAb,iBAA8Ba,EAA9B,oBAA4CZ,IADtC,cACvBK,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qD,8HChC5B,GAAiB,E,SCcJO,EAAY,WACvB,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACTX,GAAYY,EAAAA,EAAAA,MAAZZ,SAERa,EAAAA,EAAAA,YAAU,YACRX,EAAAA,EAAAA,IAAgBF,GAASc,MAAK,SAAAlB,GACvBU,GAGHC,EAASX,EAEZ,GACF,GAAE,CAACU,EAAON,IAMX,OACE,iBAAKe,UAAWC,EAAAA,UAAhB,WACE,SAACC,EAAA,EAAD,CAAUC,QANG,WAAO,IAAD,EACrBR,GAAS,UAAAF,EAASW,aAAT,eAAgBC,OAAQ,IAClC,EAIG,mBACA,iBAAKL,UAAWC,EAAAA,aAAhB,WACE,gBACED,UAAWC,EAAAA,WACXK,IAAKf,EAAMgB,YA7BL,kCA6B6BhB,EAAMgB,YA5B/B,2DA6BVC,IAAKjB,EAAMkB,SAEb,iBAAKT,UAAWC,EAAAA,KAAhB,WACE,eAAID,UAAWC,EAAAA,MAAf,SAA2BV,EAAMkB,SACjC,gBAAIT,UAAWC,EAAAA,KAAf,WACE,gBAAID,UAAWC,EAAAA,KAAf,WACE,iBAAMD,UAAWC,EAAAA,KAAjB,yBADF,IACiDV,EAAMmB,aAAc,IADrE,KAEKnB,EAAMoB,eAEX,gBAAIX,UAAWC,EAAAA,KAAf,WACE,iBAAMD,UAAWC,EAAAA,KAAjB,yBADF,IACiDV,EAAMqB,kBAIzD,sCACA,uBAAIrB,EAAMsB,YACV,oCACA,eAAIb,UAAWC,EAAAA,WAAf,SACGV,EAAMuB,OACJC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IACTF,KAAI,SAAAE,GAAI,OACP,wBAAgBA,GAAPA,EADF,aAMjB,iBAAKjB,UAAWC,EAAAA,aAAhB,WACE,SAAC,KAAD,CAAMG,MAAOX,EAASW,MAAOc,GAAI,OAAjC,mBAGA,SAAC,KAAD,CAAMd,MAAOX,EAASW,MAAOc,GAAI,UAAjC,yBAKF,SAAC,EAAAC,SAAD,WACE,SAAC,KAAD,QAIP,C,sDCjFD,OAAiB,E,SCCJjB,EAAW,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASiB,EAAe,EAAfA,SAClC,OACE,mBAAQjB,QAASA,EAASH,UAAWC,EAAAA,SAAcoB,KAAK,SAAxD,SACGD,GAGN,C","sources":["API/api.jsx","Pages/MoviesData/MoviesData.module.css","Pages/MoviesData/MoviesData.jsx","components/LoadMore/LoadMore.module.css","components/LoadMore/LoadMore.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'ce53439883ea43717bbee26a020ebf68';\n\nexport const searchMovies = async (query, page = 1) => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n  return response.data;\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchCast = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesById = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import React, { Suspense, useEffect, useState } from 'react';\nimport { LoadMore } from 'components/LoadMore/LoadMore';\nimport {\n  useParams,\n  Outlet,\n  Link,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport { fetchMoviesById } from 'API/api';\nimport css from './MoviesData.module.css';\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst DEFAULT_URL = 'https://www.freeiconspng.com/uploads/no-image-icon-6.png';\n\nexport const MovieData = () => {\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMoviesById(movieId).then(response => {\n      if (!movie) {\n        return;\n      } else {\n        setMovie(response);\n      }\n    });\n  }, [movie, movieId]);\n\n  const onGoBack = () => {\n    navigate(location.state?.from || '/');\n  };\n\n  return (\n    <div className={css.container}>\n      <LoadMore onClick={onGoBack}>Back</LoadMore>\n      <div className={css.movieTextBox}>\n        <img\n          className={css.movieImage}\n          src={movie.poster_path ? IMG_URL + movie.poster_path : DEFAULT_URL}\n          alt={movie.title}\n        />\n        <div className={css.text}>\n          <h1 className={css.title}>{movie.title}</h1>\n          <ul className={css.list}>\n            <li className={css.item}>\n              <span className={css.rate}>Vote/Votes:</span> {movie.vote_average}{' '}\n              / {movie.vote_count}\n            </li>\n            <li className={css.item}>\n              <span className={css.rate}>Popularity:</span> {movie.popularity}\n            </li>\n          </ul>\n\n          <h2>Overview</h2>\n          <p>{movie.overview}</p>\n          <h3>Genres</h3>\n          <ul className={css.genresList}>\n            {movie.genres\n              .map(genre => genre.name)\n              .map(name => (\n                <li key={name}>{name}</li>\n              ))}\n          </ul>\n        </div>\n      </div>\n      <div className={css.movieAddInfo}>\n        <Link state={location.state} to={'Cast'}>\n          Cast\n        </Link>\n        <Link state={location.state} to={'Reviews'}>\n          Reviews\n        </Link>\n      </div>\n\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import css from './LoadMore.module.css';\n\nexport const LoadMore = ({ onClick, children }) => {\n  return (\n    <button onClick={onClick} className={css.LoadMore} type=\"button\">\n      {children}\n    </button>\n  );\n};\n"],"names":["BASE_URL","API_KEY","searchMovies","query","page","axios","response","data","fetchTrendingMovies","fetchCast","movieId","fetchReviews","fetchMoviesById","id","MovieData","useState","movie","setMovie","location","useLocation","navigate","useNavigate","useParams","useEffect","then","className","css","LoadMore","onClick","state","from","src","poster_path","alt","title","vote_average","vote_count","popularity","overview","genres","map","genre","name","to","Suspense","children","type"],"sourceRoot":""}