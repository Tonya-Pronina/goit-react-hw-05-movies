{"version":3,"file":"static/js/76.b260e560.chunk.js","mappings":"6SAEMA,EAAW,gCACXC,EAAU,mCAEHC,EAAY,mCAAG,WAAOC,GAAP,4FAAcC,EAAd,+BAAqB,EAArB,SACHC,EAAAA,EAAAA,IAAA,UAClBL,EADkB,gCACcC,EADd,kBAC+BE,EAD/B,iBAC6CC,IAF1C,cACpBE,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZC,EAAmB,mCAAG,oGACVH,EAAAA,EAAAA,IAAA,UAClBL,EADkB,sCACoBC,IAFV,cAC3BK,EAD2B,OAIjCG,QAAQC,IAAIJ,EAASC,MAJY,kBAK1BD,EAASC,MALiB,2CAAH,qDAQnBI,EAAS,mCAAG,WAAMC,GAAN,uFACAP,EAAAA,EAAAA,IAAA,UAClBL,EADkB,iBACDY,EADC,4BAC0BX,IAF1B,cACjBK,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOTM,EAAY,mCAAG,WAAMD,GAAN,uFACHP,EAAAA,EAAAA,IAAA,UAClBL,EADkB,iBACDY,EADC,4BAC0BX,IAFvB,cACpBK,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZO,EAAe,mCAAG,WAAMC,GAAN,uFACNV,EAAAA,EAAAA,IAAA,UAAaL,EAAb,iBAA8Be,EAA9B,oBAA4Cd,IADtC,cACvBK,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qD,wFCjC5B,GAAiB,E,2BCyCjB,EAnCa,WACX,OAAwBS,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQN,GAAYO,EAAAA,EAAAA,MAAZP,QAQR,OANAQ,EAAAA,EAAAA,YAAU,YACRT,EAAAA,EAAAA,GAAUC,GAASS,MAAK,SAAAf,GACtBY,EAAQZ,EAASW,KAClB,GACF,GAAE,CAACL,KAGF,SAAC,EAAAU,SAAD,WACE,0BACE,wBACGL,GACCA,EAAKM,KAAI,SAAAC,GACP,IAAMC,EAAWD,EAAGE,aAAH,0CACsBF,EAAGE,cAnBpC,2DAqBN,OACE,2BACE,gBAAKC,IAAKF,EAAUG,MAAM,MAAMC,IAAKL,EAAGM,QACxC,iBAAKC,UAAWC,EAAAA,KAAhB,WACE,cAAGD,UAAWC,EAAAA,MAAd,SAA0BR,EAAGM,QAC7B,uCAAeN,EAAGS,kBAJbT,EAAGT,GAQf,SAKZ,C","sources":["API/api.jsx","components/Cast/Cast.module.css","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'ce53439883ea43717bbee26a020ebf68';\n\nexport const searchMovies = async (query, page = 1) => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n  return response.data;\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  console.log(response.data);\n  return response.data;\n};\n\nexport const fetchCast = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesById = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import React, { Suspense, useEffect, useState } from 'react';\nimport css from './Cast.module.css';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'API/api';\n\nconst DEFAULT_URL = 'https://www.freeiconspng.com/uploads/no-image-icon-6.png';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchCast(movieId).then(response => {\n      setCast(response.cast);\n    });\n  }, [movieId]);\n\n  return (\n    <Suspense>\n      <div>\n        <ul>\n          {cast &&\n            cast.map(el => {\n              const imageUrl = el.profile_path\n                ? `https://image.tmdb.org/t/p/w200/${el.profile_path}`\n                : DEFAULT_URL;\n              return (\n                <li key={el.id}>\n                  <img src={imageUrl} width=\"200\" alt={el.name} />\n                  <div className={css.text}>\n                    <p className={css.title}>{el.name}</p>\n                    <p>Character: {el.character}</p>\n                  </div>\n                </li>\n              );\n            })}\n        </ul>\n      </div>\n    </Suspense>\n  );\n};\n\nexport default Cast;\n"],"names":["BASE_URL","API_KEY","searchMovies","query","page","axios","response","data","fetchTrendingMovies","console","log","fetchCast","movieId","fetchReviews","fetchMoviesById","id","useState","cast","setCast","useParams","useEffect","then","Suspense","map","el","imageUrl","profile_path","src","width","alt","name","className","css","character"],"sourceRoot":""}