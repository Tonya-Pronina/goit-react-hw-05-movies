{"version":3,"file":"static/js/188.dd6058cd.chunk.js","mappings":"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","sources":["API/api.jsx","Pages/SearchMovie/SearchMovie.jsx","Pages/SearchMovie/SearchMovieItem.jsx","../node_modules/nanoid/index.browser.js","components/LoadMore/LoadMore.module.css","components/LoadMore/LoadMore.jsx","Pages/SearchMovie/SearchMovies.module.css"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'ce53439883ea43717bbee26a020ebf68';\n\nexport const searchMovies = async (query, page = 1) => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n  return response.data;\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchCast = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesById = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n","import React, { Suspense, useEffect, useState } from 'react';\nimport css from './SearchMovies.module.css';\nimport { SearchMoviesItem } from './SearchMovieItem';\nimport { searchMovies } from 'API/api';\nimport { useSearchParams } from 'react-router-dom';\nimport { LoadMore } from 'components/LoadMore/LoadMore';\n\nexport const SearchMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [totalMovies, setTotalMovies] = useState(0);\n\n  const ifBtnHidden = movies.length === totalMovies;\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (!query) {\n      return;\n    }\n    searchMovies(query, page).then(response => {\n      if (response.length === 0) {\n        alert('No movies found. Please try a different search query.');\n        return;\n      }\n      setMovies(prevMovies => [...prevMovies, ...response.results]);\n      setTotalMovies(response.total_results);\n    });\n  }, [searchParams, page]);\n\n  const onLoadMore = () => {\n    if (totalMovies === movies.length) {\n      alert(\"We're sorry, but you've reached the end of search results.\");\n      return;\n    }\n\n    setPage(prevPage => prevPage + 1);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    setMovies([]);\n    setPage(1);\n    setSearchParams({ query: e.target.searchQuery.value });\n  };\n\n  return (\n    <Suspense>\n      <div className=\"css.container\">\n        <form className={css.movieForm} onSubmit={onSubmit}>\n          <input\n            type=\"text\"\n            name=\"searchQuery\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies...\"\n            className={css.movieInput}\n          />\n          <button className={css.movieBtn} type=\"submit\"></button>\n        </form>\n        <SearchMoviesItem movies={movies} />\n        {movies.length > 0 && !ifBtnHidden && (\n          <LoadMore onClick={onLoadMore} className={'movieBtn'}>\n            Load more\n          </LoadMore>\n        )}\n      </div>\n    </Suspense>\n  );\n};\n","import React from 'react';\nimport css from './SearchMovies.module.css';\nimport { nanoid } from 'nanoid';\nimport { useLocation, Link } from 'react-router-dom';\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst DEFAULT_URL = 'https://www.freeiconspng.com/uploads/no-image-icon-6.png';\n\nexport const SearchMoviesItem = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div className={css.container}>\n      <ul className={css.searchMoviesList}>\n        {movies.map(movie => (\n          <li key={nanoid(7)} className={css.searchMoviesItem}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              <img\n                className={css.searchMoviesImg}\n                src={\n                  movie.poster_path ? IMG_URL + movie.poster_path : DEFAULT_URL\n                }\n                alt={movie.title}\n              />\n              <p className={css.searchMoviesText}>{movie.title}</p>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {};","import css from './LoadMore.module.css';\n\nexport const LoadMore = ({ onClick, children }) => {\n  return (\n    <button onClick={onClick} className={css.LoadMore} type=\"button\">\n      {children}\n    </button>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["BASE_URL","API_KEY","searchMovies","query","page","axios","response","data","fetchTrendingMovies","fetchCast","movieId","fetchReviews","fetchMoviesById","id","SearchMovies","useState","movies","setMovies","setPage","useSearchParams","searchParams","setSearchParams","totalMovies","setTotalMovies","ifBtnHidden","length","useEffect","get","then","prevMovies","results","total_results","alert","Suspense","className","css","onSubmit","e","preventDefault","target","searchQuery","value","type","name","autoComplete","autoFocus","placeholder","onClick","prevPage","SearchMoviesItem","location","useLocation","map","movie","to","state","from","src","poster_path","alt","title","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","LoadMore","children"],"sourceRoot":""}